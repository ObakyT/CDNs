// Dark Mode
@mixin dark_mode {
    @media (prefers-color-scheme: dark) {
        @content;
    }
}

// Grid
@mixin screen($size) {
    @if $size == 's' {
        @media only screen and (min-width: 320px) {
            @content;
        }
    } @else if $size == 'm' {
        @media only screen and (min-width: 768px) {
            @content;
        }
    } @else if $size == 'l' {
        @media only screen and (min-width: 1252px) {
            @content;
        }
    } @else {
        @media only screen and (min-width: $size) {
            @content;
        }
    }
}

// Scrollbar
@mixin scrollbars($size, $foreground-color, $background-color) {
    // For Google Chrome
    &::-webkit-scrollbar {
        width:  $size;
        height: $size;
    }

    &::-webkit-scrollbar-thumb {
        background: $foreground-color;
    }

    &::-webkit-scrollbar-track {
        background: $background-color;
    }

    // For Internet Explorer
    & {
        scrollbar-face-color: $foreground-color;
        scrollbar-track-color: $background-color;
    }
}

* {
    
    padding: 0;
    padding-block-start: 0;
    padding-block-end: 0;
    padding-inline-start: 0;
    padding-inline-end: 0;

    margin: 0;
    margin-block-start: 0;
    margin-block-end: 0;
    margin-inline-start: 0;
    margin-inline-end: 0;

}

*, *:before, *:after {
    box-sizing: border-box;
}

html{
    text-size-adjust: 100%;
    scroll-behavior: smooth;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
    line-height: 1.25;
    min-height: 100vh;
    text-rendering: optimizeSpeed;
    overflow-x: hidden;
}

p, div {
    margin: .5em 0;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
	display: block;
}

blockquote, q {
	quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
	content: '';
	content: none;
}

// Medias
img {
    border: 0;
    -ms-interpolation-mode: bicubic;
    max-width: 100%;
    display: block;
    user-select: none;
}

audio, canvas, video {
    display: inline-block;
    *display: inline;
    *zoom: 1;
    max-width: 100%;
}

audio:not([controls]) {
    display: none;
    height: 0;
}

// Tables
table {
	border-collapse: collapse;
	border-spacing: 0;
}

// Lists
ul, ol {
    list-style: none;
}

// Forms
button, input, textarea, select {
    display: block;
    font: inherit;
    background-color: transparent;
    outline: none;
    border: none;
    color: inherit;
    vertical-align: baseline;
    *vertical-align: middle;
}

button, input {
    line-height: normal;
}

button, select {
    text-transform: none;
}

button, html input[type=button], input[type=reset], input[type=submit] {
    -webkit-appearance: button;
    cursor: pointer;
    *overflow: visible;
}

button[disabled], html input[disabled] {
    cursor: default;
}

button::-moz-focus-inner, input::-moz-focus-inner {
    border: 0;
    padding: 0;
}

input[type=checkbox], input[type=radio] {
    box-sizing: border-box;
    padding: 0;
    *height: 13px;
    *width: 13px;
}


input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
    -webkit-appearance: none;
    -moz-appearance: none;
}

input[type=search] {
    appearance: none;
    box-sizing: content-box;
}

textarea {
    overflow: auto;
    vertical-align: top;
    resize: none;
}

// Others
[hidden] {
    display: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

html[lang=ar] {
    direction: rtl;
    .btn__right {
        margin-right: auto !important;
        margin-left: 0 !important;
    }
}

// Print
@media print {
	a:after{
		content: ' (' attr(href) ') ';
		color: dodgerblue;
	}
}

/* ACCESSIBILITY */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* CROSS_BROWSER */
.chromeframe {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

// -----
// USE
// -----

// Spaceing
@for $i from 0 through 10 {
    .p#{$i}{
        padding: $i/2 + em;
    }
    .pY#{$i}{
        padding-top: $i/2 + em;
        padding-bottom: $i/2 + em;
    }
    .pX#{$i}{
        padding-right: $i/2 + em;
        padding-left: $i/2 + em;
    }
    .pYa#{$i}{
        padding-top: $i/2 + em;
    }
    .pYb#{$i}{
        padding-bottom: $i/2 + em;
    }
    .pXa#{$i}{
        padding-right: $i/2 + em;
    }
    .pXb#{$i}{
        padding-left: $i/2 + em;
    }

    .m#{$i}{
        margin: $i/2 + em;
    }
    .mY#{$i}{
        margin-top: $i/2 + em;
        margin-bottom: $i/2 + em;
    }
    .mX#{$i}{
        margin-right: $i/2 + em;
        margin-left: $i/2 + em;
    }
    .mYa#{$i}{
        margin-top: $i/2 + em;
    }
    .mYb#{$i}{
        margin-bottom: $i/2 + em;
    }
    .mXa#{$i}{
        margin-right: $i/2 + em;
    }
    .mXb#{$i}{
        margin-left: $i/2 + em;
    }
}

// Positioning
$pos: (
    rel: relative,
    fix: fixed,
    abs: absolute,
    stick: sticky
);

$flex-hor: (
    start: flex-start,
    end: flex-end,
    cen: center,
    btw: space-between,
    ard: space-around,
    even: space-evenly,
);

$flex-ver: (
    start: flex-start,
    end: flex-end,
    cen: center,
    base: baseline
);

$align: (
    cen: center,
    left: left,
    right: right,
    just: justify
);

$just: (
    iword: inter-word,
    ichar: inter-character,
);
    
@each $var,$val in $pos {
    .#{$var}{
        position: $val;
    }
}

@for $i from 0 through 20 {
    .t#{$i}{
        top: $i/2 + vh;
    }
    .b#{$i}{
        bottom: $i/2 + vh;
    }
    .l#{$i}{
        left: $i/2 + vh;
    }
    .r#{$i}{
        right: $i/2 + vh;
    }
}

.wrap {
    margin: 0 auto;
}
.center__max {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%)
}
.center {
    @include screen('l') {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%)
    }
}

.row, .col {
    display: flex;
}

.row {
    flex-flow: row wrap;
}

.col {
    flex-flow: column wrap;
}

@each $var,$val in $flex-hor {
    .hor__#{$var} {
        justify-content: $val;
    }
}

@each $var,$val in $flex-ver {
    .ver__#{$var} {
        align-items: $val;
    }
}

@for $i from 1 through 6 {
    .o#{$i} {
        order: $i;
    }
}

// Grid
.g {
    &__fit {
        width: fit-content;
    }
    &__min {
        width: min-content;
    }
    &__max {
        width: max-content;
    }
    @for $i from 1 through 6 {
        &#{$i} {
            @include screen('s') {
                @if $i/2 > 1 {
                    width: 100%;
                } @else {
                    width: percentage($i/2);
                }
            }
            @include screen('m') {
                @if $i/3 > 1 {
                    width: 100%;
                } @else {
                    width: percentage($i/3);
                }
            }
            @include screen('l') {
                width: percentage($i/6);
            }
        }
    }
    @for $i from 1 through 6 {
        &#{$i}--max {
            @include screen('s') {
                @if $i/2 > 1 {
                    width: 100%;
                } @else {
                    width: percentage($i/2);
                }
            }
            @include screen('m') {
                @if $i/3 > 1 {
                    width: 100%;
                } @else {
                    width: percentage($i/3);
                }
            }
            @media only screen and (min-width: 1024px) {
                @if $i/4 > 1{
                    width: 100% !important;
                } @else {
                    width: percentage($i/4) !important;
                }
            }
            @include screen('l') {
                width: percentage($i/6) !important;
            }
        }
    }
}

@for $i from 1 through 5 {
    .w#{$i}{
        @include screen('s'){
            @if $i/2 > 1 {
                width: 100%;
            } @else {
                width: percentage($i/2);
            }
        }
        @include screen('m'){
            @if $i/3 > 1 {
                width: 100%;
            } @else {
                width: percentage($i/3);
            }
        }
        @include screen('l'){
            @if $i/5 > 1 {
                width: 100%;
            } @else {
                width: percentage($i/5);
            }
        }
    }
}

.h {
    &__full {
        height: 100vh;
    }
    &__res {
        height: fit-content;
        @include screen(l) {
            height: 100vh;
        }
    }
}

// Text
.txt {
    &__up {
        text-transform: uppercase;
    }
    &__cap {
        text-transform: capitalize;
    }
    @each $var,$val in $align {
        &__#{$var}{
            text-align: $val;
        }
        &__#{$var}l{
            text-align-last: $val;
        }
    }
    @each $var,$val in $just {
        &__#{$var}{
            text-justify: $val;
        }
    }
    &__ellip {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    &__sm {
        font-size: 75%;
    }
    &__md {
        font-size: 90%;
    }
}

// Other
@for $i from 0 through 11 {
    .z#{$i}{
        z-index: 1000 + $i;
    }
}

.obj {
    &--fit {
        object-fit: cover;
    }
    &--con {
        object-fit: contain;
    }
    &--cen {
        object-position: center center;
    }
}

.no-scrollbar {
    @include scrollbars(.0001px, rgba(0,0,0,0), rgba(0,0,0,0))
}